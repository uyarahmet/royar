{"ast":null,"code":"var _jsxFileName = \"/Users/ahmet/Desktop/royar/src/App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport './css/main.css';\nimport SlideShow from './SlideShow';\nimport SearchAndBackground from './SearchAndBackground';\nimport ActionMenu from './ActionMenu';\nimport Contact from './Contact';\nimport Footer from './Footer';\nimport { Widget } from 'react-chat-widget';\nimport { StreamChat } from 'stream-chat';\nimport 'react-chat-widget/lib/styles.css';\nimport 'stream-chat-react/dist/css/index.css';\nimport { useEffect, useState, useCallback, useRef } from 'react';\nimport { Chat, Channel, ChannelHeader, ChannelList, LoadingIndicator, MessageInput, MessageList, Thread, useMessageContext, Window } from 'stream-chat-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chatClient = StreamChat.getInstance('2myywf7yfbk8');\nconst userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoic2lsZW50LWxpbWl0LTcifQ.E12VlZepuaIChIwoBWtUu9LNYnb403XXsTSu-T5RFBY';\nconst filters = {\n  type: 'messaging',\n  members: {\n    $in: ['silent-limit-7']\n  }\n};\nconst sort = {\n  last_message_at: -1\n};\n\nconst CustomChannelPreview = props => {\n  var _messages;\n\n  const {\n    channel,\n    setActiveChannel\n  } = props;\n  const {\n    messages\n  } = channel.state;\n  const messagePreview = (_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : _messages.text.slice(0, 30);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: () => setActiveChannel(channel),\n    style: {\n      margin: '12px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: channel.data.name || 'Unnamed Channel'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '14px'\n      },\n      children: messagePreview\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_c = CustomChannelPreview;\n\nconst CustomMessage = () => {\n  _s();\n\n  const {\n    message\n  } = useMessageContext();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"b\", {\n      style: {\n        marginRight: '4px'\n      },\n      children: message.user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \" \", message.text]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomMessage, \"hHXdyvEs1K93IY4nWNCpN9EvnMs=\", false, function () {\n  return [useMessageContext];\n});\n\n_c2 = CustomMessage;\nchatClient.connectUser({\n  id: 'silent-limit-7',\n  name: 'silent-limit-7',\n  image: 'https://getstream.io/random_png/?id=silent-limit-7&name=silent-limit-7'\n}, userToken);\nconst channel = chatClient.channel('messaging', 'silent-limit-7', {\n  // add as many custom fields as you'd like\n  image: 'https://www.drupal.org/files/project-images/react.png',\n  name: 'Talk about React',\n  members: ['silent-limit-7']\n});\nexport default function App() {\n  _s2();\n\n  const [chatClient, setChatClient] = useState(null);\n  useEffect(() => {\n    const initChat = async () => {\n      const client = StreamChat.getInstance('2myywf7yfbk8');\n      await client.connectUser({\n        id: 'silent-limit-7',\n        name: 'silent-limit-7',\n        image: 'https://getstream.io/random_png/?id=silent-limit-7&name=silent-limit-7'\n      }, userToken);\n      setChatClient(client);\n    };\n\n    initChat();\n  }, []);\n\n  if (!chatClient) {\n    return /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchAndBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SlideShow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Widget, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), \"}\", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"3OKslBDJDRnOl144GvOTF2c0PQc=\");\n\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"CustomChannelPreview\");\n$RefreshReg$(_c2, \"CustomMessage\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/src/App.js"],"names":["Navbar","SlideShow","SearchAndBackground","ActionMenu","Contact","Footer","Widget","StreamChat","useEffect","useState","useCallback","useRef","Chat","Channel","ChannelHeader","ChannelList","LoadingIndicator","MessageInput","MessageList","Thread","useMessageContext","Window","chatClient","getInstance","userToken","filters","type","members","$in","sort","last_message_at","CustomChannelPreview","props","channel","setActiveChannel","messages","state","messagePreview","length","text","slice","margin","data","name","fontSize","CustomMessage","message","marginRight","user","connectUser","id","image","App","setChatClient","initChat","client"],"mappings":"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","sourcesContent":["import './App.css';\nimport Navbar from './Navbar'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport './css/main.css';\nimport SlideShow from './SlideShow'\nimport SearchAndBackground from './SearchAndBackground'\nimport ActionMenu from './ActionMenu'\nimport Contact from './Contact'\nimport Footer from './Footer'\nimport {Widget} from 'react-chat-widget'\nimport { StreamChat } from 'stream-chat';\nimport 'react-chat-widget/lib/styles.css';\nimport 'stream-chat-react/dist/css/index.css';\nimport {useEffect, useState, useCallback, useRef} from 'react'\nimport { Chat, Channel, ChannelHeader,\n   ChannelList, LoadingIndicator, MessageInput, MessageList, Thread, useMessageContext, Window } from 'stream-chat-react';\n\nconst chatClient = StreamChat.getInstance('2myywf7yfbk8');\nconst userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoic2lsZW50LWxpbWl0LTcifQ.E12VlZepuaIChIwoBWtUu9LNYnb403XXsTSu-T5RFBY';\n\n\nconst filters = { type: 'messaging', members: { $in: ['silent-limit-7'] } };\nconst sort = { last_message_at: -1 };\n\nconst CustomChannelPreview = (props) => {\n  const { channel, setActiveChannel } = props;\n\n  const { messages } = channel.state;\n  const messagePreview = messages[messages.length - 1]?.text.slice(0, 30);\n\n  return (\n    <div onClick={() => setActiveChannel(channel)} style={{ margin: '12px' }}>\n      <div>{channel.data.name || 'Unnamed Channel'}</div>\n      <div style={{ fontSize: '14px' }}>{messagePreview}</div>\n    </div>\n  );\n};\n\nconst CustomMessage = () => {\n  const { message } = useMessageContext();\n\n  return (\n    <div>\n      <b style={{ marginRight: '4px' }}>{message.user.name}</b> {message.text}\n    </div>\n)};\n\n\nchatClient.connectUser(\n  {\n    id: 'silent-limit-7',\n    name: 'silent-limit-7',\n    image: 'https://getstream.io/random_png/?id=silent-limit-7&name=silent-limit-7',\n  },\n  userToken,\n);\n\nconst channel = chatClient.channel('messaging', 'silent-limit-7', {\n  // add as many custom fields as you'd like\n  image: 'https://www.drupal.org/files/project-images/react.png',\n  name: 'Talk about React',\n  members: ['silent-limit-7'],\n});\n\n\nexport default function App() {\n\n  const [chatClient, setChatClient] = useState(null);\n\n  useEffect(() => {\n    const initChat = async () => {\n      const client = StreamChat.getInstance('2myywf7yfbk8');\n\n      await client.connectUser(\n        {\n          id: 'silent-limit-7',\n          name: 'silent-limit-7',\n          image: 'https://getstream.io/random_png/?id=silent-limit-7&name=silent-limit-7',\n        },\n        userToken,\n      );\n\n      setChatClient(client);\n    };\n\n    initChat();\n  }, []);\n\n  if (!chatClient) {\n    return <LoadingIndicator />;\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <SearchAndBackground/>\n      <SlideShow/>\n      <ActionMenu/>\n      <Widget/>\n      <Contact/>}\n      <Footer/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}