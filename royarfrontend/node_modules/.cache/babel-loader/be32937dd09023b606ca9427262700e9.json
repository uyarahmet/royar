{"ast":null,"code":"var _jsxFileName = \"/Users/ahmet/Desktop/royar/src/CustomerApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Channel, MessageCommerce, MessageInput, MessageList, useChatContext, Window } from 'stream-chat-react';\nimport KevinAvatar from './assets/kevin-avatar.png';\nimport { EmptyStateIndicator } from './components/CustomerEmptyStateIndicator/EmptyStateIndicator';\nimport { CustomerChannelHeader } from './components/CustomerChannelHeader/CustomerChannelHeader';\nimport { CustomerMessageInput } from './components/MessageInput/CustomerMessageInput';\nimport { CloseCustomerIcon, OpenCustomerIcon } from './assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CustomerApp = ({\n  customerChannelId\n}) => {\n  _s();\n\n  const {\n    client: customerClient\n  } = useChatContext();\n  const [customerChannel, setCustomerChannel] = useState();\n  const [open, setOpen] = useState(true);\n  useEffect(() => {\n    const getCustomerChannel = async () => {\n      const newChannel = await customerClient.channel('commerce', customerChannelId, {\n        name: 'Kevin Rosen',\n        image: KevinAvatar,\n        issue: 'Company Inquiry',\n        subtitle: '#853 Company Inquiry'\n      });\n\n      if (newChannel.state.messages.length) {\n        newChannel.state.clearMessages();\n      }\n\n      await newChannel.watch();\n      setCustomerChannel(newChannel);\n    };\n\n    getCustomerChannel();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `customer-wrapper ${open ? 'wrapper--open' : ''}`,\n    children: [customerChannel && open && /*#__PURE__*/_jsxDEV(Channel, {\n      channel: customerChannel,\n      EmptyStateIndicator: props => /*#__PURE__*/_jsxDEV(EmptyStateIndicator, { ...props,\n        channel: customerChannel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this),\n      Input: props => /*#__PURE__*/_jsxDEV(CustomerMessageInput, { ...props,\n        open,\n        setOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 29\n      }, this),\n      Message: MessageCommerce,\n      children: /*#__PURE__*/_jsxDEV(Window, {\n        children: [/*#__PURE__*/_jsxDEV(CustomerChannelHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), open && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: '#005fff'\n          },\n          children: /*#__PURE__*/_jsxDEV(MessageList, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MessageInput, {\n          focus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `toggle-button ${open && 'close-button'}`,\n      onClick: () => setOpen(!open),\n      children: open ? /*#__PURE__*/_jsxDEV(CloseCustomerIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(OpenCustomerIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 41\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerApp, \"18zMHPJKDvr+0l2UQKUQt3+7+Jg=\", false, function () {\n  return [useChatContext];\n});\n\n_c = CustomerApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerApp\");","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/src/CustomerApp.js"],"names":["React","useEffect","useState","Channel","MessageCommerce","MessageInput","MessageList","useChatContext","Window","KevinAvatar","EmptyStateIndicator","CustomerChannelHeader","CustomerMessageInput","CloseCustomerIcon","OpenCustomerIcon","CustomerApp","customerChannelId","client","customerClient","customerChannel","setCustomerChannel","open","setOpen","getCustomerChannel","newChannel","channel","name","image","issue","subtitle","state","messages","length","clearMessages","watch","props","background"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Channel,\n  MessageCommerce,\n  MessageInput,\n  MessageList,\n  useChatContext,\n  Window,\n} from 'stream-chat-react';\n\nimport KevinAvatar from './assets/kevin-avatar.png';\nimport { EmptyStateIndicator } from './components/CustomerEmptyStateIndicator/EmptyStateIndicator';\nimport { CustomerChannelHeader } from './components/CustomerChannelHeader/CustomerChannelHeader';\nimport { CustomerMessageInput } from './components/MessageInput/CustomerMessageInput';\n\nimport { CloseCustomerIcon, OpenCustomerIcon } from './assets';\n\nexport const CustomerApp = ({ customerChannelId }) => {\n  const { client: customerClient } = useChatContext();\n\n  const [customerChannel, setCustomerChannel] = useState();\n  const [open, setOpen] = useState(true);\n\n  useEffect(() => {\n    const getCustomerChannel = async () => {\n      const newChannel = await customerClient.channel('commerce', customerChannelId, {\n        name: 'Kevin Rosen',\n        image: KevinAvatar,\n        issue: 'Company Inquiry',\n        subtitle: '#853 Company Inquiry',\n      });\n\n      if (newChannel.state.messages.length) {\n        newChannel.state.clearMessages();\n      }\n\n      await newChannel.watch();\n\n      setCustomerChannel(newChannel);\n    };\n\n    getCustomerChannel();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className={`customer-wrapper ${open ? 'wrapper--open' : ''}`}>\n      {customerChannel && open && (\n        <Channel\n          channel={customerChannel}\n          EmptyStateIndicator={(props) => (\n            <EmptyStateIndicator {...props} channel={customerChannel} />\n          )}\n          Input={(props) => <CustomerMessageInput {...props} {...{ open, setOpen }} />}\n          Message={MessageCommerce}\n        >\n          <Window>\n            <CustomerChannelHeader />\n            {open && (\n              <div style={{ background: '#005fff' }}>\n                <MessageList />\n              </div>\n            )}\n            <MessageInput focus />\n          </Window>\n        </Channel>\n      )}\n      <div className={`toggle-button ${open && 'close-button'}`} onClick={() => setOpen(!open)}>\n        {open ? <CloseCustomerIcon /> : <OpenCustomerIcon />}\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}