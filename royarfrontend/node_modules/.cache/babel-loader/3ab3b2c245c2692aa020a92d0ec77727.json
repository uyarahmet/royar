{"ast":null,"code":"var _jsxFileName = \"/Users/ahmet/Desktop/royar/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport './css/main.css';\nimport SlideShow from './SlideShow';\nimport SearchAndBackground from './SearchAndBackground';\nimport ActionMenu from './ActionMenu';\nimport Contact from './Contact';\nimport Footer from './Footer';\nimport { Chat } from 'stream-chat-react';\nimport { StreamChat } from 'stream-chat';\nimport { v4 as uuidv4 } from 'uuid';\nimport 'stream-chat-react/dist/css/index.css';\nimport './App.css';\nimport { AgentApp } from './AgentApp';\nimport JenAvatar from './assets/jen-avatar.png';\nimport KevinAvatar from './assets/kevin-avatar.png';\nimport User1 from './assets/user1.png';\nimport { AgentHeader } from './components/AgentHeader/AgentHeader';\nimport { AgentLoading } from './components/AgentLoading/AgentLoading';\nimport { useChecklist } from './ChecklistTasks';\nimport { CustomerApp } from './CustomerApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst urlParams = new URLSearchParams(window.location.search);\nconst apiKey = urlParams.get('apikey') || process.env.REACT_APP_STREAM_KEY;\nconst agentChannelId = `agent-demo-${uuidv4()}`;\nconst customerChannelId = `customer-demo-${uuidv4()}`;\nconst targetOrigin = urlParams.get('target_origin') || process.env.REACT_APP_TARGET_ORIGIN;\nconst theme = 'light';\nconst previousUserId = urlParams.get('user1') || process.env.REACT_APP_PREVIOUS_ID;\nconst previousUserToken = urlParams.get('user1_token') || process.env.REACT_APP_PREVIOUS_TOKEN;\nconst agentUserId = urlParams.get('user2') || process.env.REACT_APP_AGENT_ID;\nconst agentUserToken = urlParams.get('user2_token') || process.env.REACT_APP_AGENT_TOKEN;\nconst customerUserId = urlParams.get('user3') || process.env.REACT_APP_CUSTOMER_ID;\nconst customerUserToken = urlParams.get('user3_token') || process.env.REACT_APP_CUSTOMER_TOKEN;\nconst customerClient = StreamChat.getInstance(apiKey);\ncustomerClient.connectUser({\n  id: customerUserId,\n  name: 'Kevin Rosen',\n  image: KevinAvatar,\n  phone: '+1 (303) 555-1212',\n  email: 'kevin@example.com'\n}, customerUserToken);\nexport default function App() {\n  _s();\n\n  const [agentClient, setAgentClient] = useState();\n  const [initialClient, setInitialClient] = useState();\n  const [initialChannel, setInitialChannel] = useState();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchAndBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SlideShow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agent-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(AgentHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), agentClient ? /*#__PURE__*/_jsxDEV(Chat, {\n          client: agentClient,\n          children: /*#__PURE__*/_jsxDEV(AgentApp, {\n            agentChannelId,\n            customerChannelId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this) : /*#__PURE__*/_jsxDEV(AgentLoading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), customerClient && /*#__PURE__*/_jsxDEV(Chat, {\n        client: customerClient,\n        theme: `commerce ${theme}`,\n        children: /*#__PURE__*/_jsxDEV(CustomerApp, {\n          customerChannelId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), \"}\", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"r/sBJ6iOSrPKSsSlYYImPV0isFQ=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/src/App.js"],"names":["Navbar","SlideShow","SearchAndBackground","ActionMenu","Contact","Footer","Chat","StreamChat","v4","uuidv4","AgentApp","JenAvatar","KevinAvatar","User1","AgentHeader","AgentLoading","useChecklist","CustomerApp","urlParams","URLSearchParams","window","location","search","apiKey","get","process","env","REACT_APP_STREAM_KEY","agentChannelId","customerChannelId","targetOrigin","REACT_APP_TARGET_ORIGIN","theme","previousUserId","REACT_APP_PREVIOUS_ID","previousUserToken","REACT_APP_PREVIOUS_TOKEN","agentUserId","REACT_APP_AGENT_ID","agentUserToken","REACT_APP_AGENT_TOKEN","customerUserId","REACT_APP_CUSTOMER_ID","customerUserToken","REACT_APP_CUSTOMER_TOKEN","customerClient","getInstance","connectUser","id","name","image","phone","email","App","agentClient","setAgentClient","useState","initialClient","setInitialClient","initialChannel","setInitialChannel"],"mappings":"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","sourcesContent":["import './App.css';\nimport Navbar from './Navbar'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport './css/main.css';\nimport SlideShow from './SlideShow'\nimport SearchAndBackground from './SearchAndBackground'\nimport ActionMenu from './ActionMenu'\nimport Contact from './Contact'\nimport Footer from './Footer'\nimport { Chat } from 'stream-chat-react';\nimport { StreamChat } from 'stream-chat';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport 'stream-chat-react/dist/css/index.css';\n\nimport './App.css';\n\nimport { AgentApp } from './AgentApp';\nimport JenAvatar from './assets/jen-avatar.png';\nimport KevinAvatar from './assets/kevin-avatar.png';\nimport User1 from './assets/user1.png';\nimport { AgentHeader } from './components/AgentHeader/AgentHeader';\nimport { AgentLoading } from './components/AgentLoading/AgentLoading';\nimport { useChecklist } from './ChecklistTasks';\nimport { CustomerApp } from './CustomerApp';\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst apiKey = urlParams.get('apikey') || process.env.REACT_APP_STREAM_KEY;\nconst agentChannelId = `agent-demo-${uuidv4()}`;\nconst customerChannelId = `customer-demo-${uuidv4()}`;\nconst targetOrigin = urlParams.get('target_origin') || process.env.REACT_APP_TARGET_ORIGIN;\nconst theme = 'light';\n\nconst previousUserId = urlParams.get('user1') || process.env.REACT_APP_PREVIOUS_ID;\nconst previousUserToken = urlParams.get('user1_token') || process.env.REACT_APP_PREVIOUS_TOKEN;\n\nconst agentUserId = urlParams.get('user2') || process.env.REACT_APP_AGENT_ID;\nconst agentUserToken = urlParams.get('user2_token') || process.env.REACT_APP_AGENT_TOKEN;\n\nconst customerUserId = urlParams.get('user3') || process.env.REACT_APP_CUSTOMER_ID;\nconst customerUserToken = urlParams.get('user3_token') || process.env.REACT_APP_CUSTOMER_TOKEN;\n\nconst customerClient = StreamChat.getInstance(apiKey);\ncustomerClient.connectUser(\n  {\n    id: customerUserId,\n    name: 'Kevin Rosen',\n    image: KevinAvatar,\n    phone: '+1 (303) 555-1212',\n    email: 'kevin@example.com',\n  },\n  customerUserToken,\n);\n\nexport default function App() {\n\n  const [agentClient, setAgentClient] = useState();\n  const [initialClient, setInitialClient] = useState();\n  const [initialChannel, setInitialChannel] = useState();\n\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <SearchAndBackground/>\n      <SlideShow/>\n      <ActionMenu/>\n      <>\n      <div className='agent-wrapper'>\n        <AgentHeader />\n        {agentClient ? (\n          <Chat client={agentClient}>\n            <AgentApp {...{ agentChannelId, customerChannelId }} />\n          </Chat>\n        ) : (\n          <AgentLoading />\n        )}\n      </div>\n      {customerClient && (\n        <Chat client={customerClient} theme={`commerce ${theme}`}>\n          <CustomerApp {...{ customerChannelId }} />\n        </Chat>\n      )}\n    </>\n      <Contact/>}\n      <Footer/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}