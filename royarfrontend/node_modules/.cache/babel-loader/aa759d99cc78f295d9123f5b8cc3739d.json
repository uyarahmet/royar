{"ast":null,"code":"var _jsxFileName = \"/Users/ahmet/Desktop/royar/src/components/AgentChannelHeader/NotificationPopup.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport './NotificationPopup.css';\nimport { CloseIcon } from '../../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const NotificationPopup = props => {\n  _s();\n\n  const {\n    eventChannel,\n    previewText,\n    setPopupVisible\n  } = props;\n  const {\n    setActiveChannel\n  } = useChatContext();\n\n  const getMessagePreview = () => {\n    return previewText.length > 40 ? `\"${previewText.slice(0, 40)}...\"` : `\"${previewText}\"`;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"notification-popup__container\",\n    onClick: () => {\n      if (eventChannel) setActiveChannel(eventChannel);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification-popup__top-wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"notification-popup__top-text\",\n        children: \"AGENT DASHBOARD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-popup__dismiss\",\n        onClick: () => setPopupVisible(false),\n        children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"notification-popup__waiting-text\",\n      children: \"You have 1 new customer waiting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"notification-popup__message-preview\",\n      children: getMessagePreview()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NotificationPopup, \"rZNnJT5lU0fmwQyULMRj+DCMcqA=\", false, function () {\n  return [useChatContext];\n});\n\n_c = NotificationPopup;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationPopup\");","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/src/components/AgentChannelHeader/NotificationPopup.js"],"names":["React","useChatContext","CloseIcon","NotificationPopup","props","eventChannel","previewText","setPopupVisible","setActiveChannel","getMessagePreview","length","slice"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAO,yBAAP;AAEA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,WAAhB;AAA6BC,IAAAA;AAA7B,MAAiDH,KAAvD;AAEA,QAAM;AAAEI,IAAAA;AAAF,MAAuBP,cAAc,EAA3C;;AAEA,QAAMQ,iBAAiB,GAAG,MAAM;AAC9B,WAAOH,WAAW,CAACI,MAAZ,GAAqB,EAArB,GAA2B,IAAGJ,WAAW,CAACK,KAAZ,CAAkB,CAAlB,EAAqB,EAArB,CAAyB,MAAvD,GAAgE,IAAGL,WAAY,GAAtF;AACD,GAFD;;AAIA,sBACE;AACE,IAAA,SAAS,EAAC,+BADZ;AAEE,IAAA,OAAO,EAAE,MAAM;AACb,UAAID,YAAJ,EAAkBG,gBAAgB,CAACH,YAAD,CAAhB;AACnB,KAJH;AAAA,4BAME;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,8BACE;AAAG,QAAA,SAAS,EAAC,8BAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAK,QAAA,SAAS,EAAC,6BAAf;AAA6C,QAAA,OAAO,EAAE,MAAME,eAAe,CAAC,KAAD,CAA3E;AAAA,+BACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAYE;AAAG,MAAA,SAAS,EAAC,kCAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE;AAAG,MAAA,SAAS,EAAC,qCAAb;AAAA,gBAAoDE,iBAAiB;AAArE;AAAA;AAAA;AAAA;AAAA,YAbF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA1BM;;GAAMN,iB;UAGkBF,c;;;KAHlBE,iB","sourcesContent":["import React from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nimport './NotificationPopup.css';\n\nimport { CloseIcon } from '../../assets';\n\nexport const NotificationPopup = (props) => {\n  const { eventChannel, previewText, setPopupVisible } = props;\n\n  const { setActiveChannel } = useChatContext();\n\n  const getMessagePreview = () => {\n    return previewText.length > 40 ? `\"${previewText.slice(0, 40)}...\"` : `\"${previewText}\"`;\n  };\n\n  return (\n    <div\n      className='notification-popup__container'\n      onClick={() => {\n        if (eventChannel) setActiveChannel(eventChannel);\n      }}\n    >\n      <div className='notification-popup__top-wrapper'>\n        <p className='notification-popup__top-text'>AGENT DASHBOARD</p>\n        <div className='notification-popup__dismiss' onClick={() => setPopupVisible(false)}>\n          <CloseIcon />\n        </div>\n      </div>\n      <p className='notification-popup__waiting-text'>You have 1 new customer waiting</p>\n      <p className='notification-popup__message-preview'>{getMessagePreview()}</p>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}