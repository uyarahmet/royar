{"ast":null,"code":"var _jsxFileName = \"/Users/ahmet/Desktop/royar/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport './css/main.css';\nimport SlideShow from './SlideShow';\nimport SearchAndBackground from './SearchAndBackground';\nimport ActionMenu from './ActionMenu';\nimport Contact from './Contact';\nimport Footer from './Footer';\nimport { Widget } from 'react-chat-widget';\nimport { StreamChat } from 'stream-chat';\nimport 'react-chat-widget/lib/styles.css';\nimport 'stream-chat-react/dist/css/index.css';\nimport { useEffect, useState, useCallback, useRef } from 'react';\nimport { Attachment, Chat, Channel, ChannelHeader, ChannelList, LoadingIndicator, MessageInput, MessageList, Thread, Window } from 'stream-chat-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chatClient = StreamChat.getInstance('2myywf7yfbk8');\nconst userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoic2lsZW50LWxpbWl0LTcifQ.E12VlZepuaIChIwoBWtUu9LNYnb403XXsTSu-T5RFBY';\nconst filters = {\n  type: 'messaging',\n  members: {\n    $in: ['silent-limit-7']\n  }\n};\nconst sort = {\n  last_message_at: -1\n};\nconst attachments = [{\n  image: 'https://images-na.ssl-images-amazon.com/images/I/71k0cry-ceL._SL1500_.jpg',\n  name: 'iPhone',\n  type: 'product',\n  url: 'https://goo.gl/ppFmcR'\n}];\n/*\nconst CustomChannelPreview = (props) => {\n  const { channel, setActiveChannel } = props;\n\n  const { messages } = channel.state;\n  const messagePreview = messages[messages.length - 1]?.text.slice(0, 30);\n\n  return (\n    <div onClick={() => setActiveChannel(channel)} style={{ margin: '12px' }}>\n      <div>{channel.data.name || 'Unnamed Channel'}</div>\n      <div style={{ fontSize: '14px' }}>{messagePreview}</div>\n    </div>\n  );\n};\n\nconst CustomMessage = () => {\n  const { message } = useMessageContext();\n\n  return (\n    <div>\n      <b style={{ marginRight: '4px' }}>{message.user.name}</b> {message.text}\n    </div>\n)};\n\n\nchatClient.connectUser(\n  {\n    id: 'silent-limit-7',\n    name: 'silent-limit-7',\n    image: 'https://getstream.io/random_png/?id=silent-limit-7&name=silent-limit-7',\n  },\n  userToken,\n);\n\nconst channel = chatClient.channel('messaging', 'silent-limit-7', {\n  // add as many custom fields as you'd like\n  image: 'https://www.drupal.org/files/project-images/react.png',\n  name: 'Talk about React',\n  members: ['silent-limit-7'],\n});\n*/\n\nconst CustomAttachment = props => {\n  const {\n    attachments\n  } = props;\n  const [attachment] = attachments || [];\n\n  if ((attachment === null || attachment === void 0 ? void 0 : attachment.type) === 'product') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Product:\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: attachment.url,\n        rel: \"noreferrer\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          alt: \"custom-attachment\",\n          height: \"100px\",\n          src: attachment.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), attachment.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Attachment, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 10\n  }, this);\n};\n\n_c = CustomAttachment;\nexport default function App() {\n  _s();\n\n  const [chatClient, setChatClient] = useState(null);\n  useEffect(() => {\n    const initChat = async () => {\n      const client = StreamChat.getInstance('2myywf7yfbk8');\n      await client.connectUser({\n        id: 'silent-limit-7',\n        name: 'silent-limit-7',\n        image: 'https://getstream.io/random_png/?id=silent-limit-7&name=silent-limit-7'\n      }, userToken);\n      const [channelResponse] = await client.queryChannels(filters, sort);\n      await channelResponse.sendMessage({\n        text: 'Your selected product is out of stock, would you like to select one of these alternatives?',\n        attachments\n      });\n      setChatClient(client);\n    };\n\n    initChat();\n  }, []);\n\n  if (!chatClient) {\n    return /*#__PURE__*/_jsxDEV(LoadingIndicator, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchAndBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SlideShow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chat, {\n      client: chatClient,\n      theme: \"messaging light\",\n      children: [/*#__PURE__*/_jsxDEV(ChannelList, {\n        filters: filters,\n        sort: sort,\n        Preview: CustomChannelPreview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Channel, {\n        children: [/*#__PURE__*/_jsxDEV(Window, {\n          children: [/*#__PURE__*/_jsxDEV(ChannelHeader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MessageList, {\n            Message: CustomMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MessageInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Thread, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), \"}\", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"3OKslBDJDRnOl144GvOTF2c0PQc=\");\n\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomAttachment\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/src/App.js"],"names":["Navbar","SlideShow","SearchAndBackground","ActionMenu","Contact","Footer","Widget","StreamChat","useEffect","useState","useCallback","useRef","Attachment","Chat","Channel","ChannelHeader","ChannelList","LoadingIndicator","MessageInput","MessageList","Thread","Window","chatClient","getInstance","userToken","filters","type","members","$in","sort","last_message_at","attachments","image","name","url","CustomAttachment","props","attachment","App","setChatClient","initChat","client","connectUser","id","channelResponse","queryChannels","sendMessage","text","CustomChannelPreview","CustomMessage"],"mappings":"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","sourcesContent":["import './App.css';\nimport Navbar from './Navbar'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport './css/main.css';\nimport SlideShow from './SlideShow'\nimport SearchAndBackground from './SearchAndBackground'\nimport ActionMenu from './ActionMenu'\nimport Contact from './Contact'\nimport Footer from './Footer'\nimport {Widget} from 'react-chat-widget'\nimport { StreamChat } from 'stream-chat';\nimport 'react-chat-widget/lib/styles.css';\nimport 'stream-chat-react/dist/css/index.css';\nimport {useEffect, useState, useCallback, useRef} from 'react'\nimport {\n  Attachment,\n  Chat,\n  Channel,\n  ChannelHeader,\n  ChannelList,\n  LoadingIndicator,\n  MessageInput,\n  MessageList,\n  Thread,\n  Window,\n} from 'stream-chat-react';\n\n\n\nconst chatClient = StreamChat.getInstance('2myywf7yfbk8');\nconst userToken = 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyX2lkIjoic2lsZW50LWxpbWl0LTcifQ.E12VlZepuaIChIwoBWtUu9LNYnb403XXsTSu-T5RFBY';\nconst filters = { type: 'messaging', members: { $in: ['silent-limit-7'] } };\nconst sort = { last_message_at: -1 };\n\nconst attachments = [\n  {\n    image: 'https://images-na.ssl-images-amazon.com/images/I/71k0cry-ceL._SL1500_.jpg',\n    name: 'iPhone',\n    type: 'product',\n    url: 'https://goo.gl/ppFmcR',\n  },\n];\n\n/*\nconst CustomChannelPreview = (props) => {\n  const { channel, setActiveChannel } = props;\n\n  const { messages } = channel.state;\n  const messagePreview = messages[messages.length - 1]?.text.slice(0, 30);\n\n  return (\n    <div onClick={() => setActiveChannel(channel)} style={{ margin: '12px' }}>\n      <div>{channel.data.name || 'Unnamed Channel'}</div>\n      <div style={{ fontSize: '14px' }}>{messagePreview}</div>\n    </div>\n  );\n};\n\nconst CustomMessage = () => {\n  const { message } = useMessageContext();\n\n  return (\n    <div>\n      <b style={{ marginRight: '4px' }}>{message.user.name}</b> {message.text}\n    </div>\n)};\n\n\nchatClient.connectUser(\n  {\n    id: 'silent-limit-7',\n    name: 'silent-limit-7',\n    image: 'https://getstream.io/random_png/?id=silent-limit-7&name=silent-limit-7',\n  },\n  userToken,\n);\n\nconst channel = chatClient.channel('messaging', 'silent-limit-7', {\n  // add as many custom fields as you'd like\n  image: 'https://www.drupal.org/files/project-images/react.png',\n  name: 'Talk about React',\n  members: ['silent-limit-7'],\n});\n*/\n\nconst CustomAttachment = (props) => {\n  const { attachments } = props;\n  const [attachment] = attachments || [];\n\n  if (attachment?.type === 'product') {\n    return (\n      <div>\n        Product:\n        <a href={attachment.url} rel='noreferrer'>\n          <img alt='custom-attachment' height='100px' src={attachment.image} />\n          <br />\n          {attachment.name}\n        </a>\n      </div>\n    );\n  }\n\n  return <Attachment {...props} />;\n};\n\nexport default function App() {\n\n  const [chatClient, setChatClient] = useState(null);\n\n  useEffect(() => {\n    const initChat = async () => {\n      const client = StreamChat.getInstance('2myywf7yfbk8');\n\n      await client.connectUser(\n        {\n          id: 'silent-limit-7',\n          name: 'silent-limit-7',\n          image: 'https://getstream.io/random_png/?id=silent-limit-7&name=silent-limit-7',\n        },\n        userToken,\n      );\n\n      const [channelResponse] = await client.queryChannels(filters, sort);\n\n      await channelResponse.sendMessage({\n        text: 'Your selected product is out of stock, would you like to select one of these alternatives?',\n        attachments,\n      });\n\n      setChatClient(client);\n    };\n\n    initChat();\n  }, []);\n\n  if (!chatClient) {\n    return <LoadingIndicator />;\n  }\n\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <SearchAndBackground/>\n      <SlideShow/>\n      <ActionMenu/>\n        <Chat client={chatClient} theme='messaging light'>\n         <ChannelList filters={filters} sort={sort} Preview={CustomChannelPreview} />\n          <Channel>\n           <Window>\n            <ChannelHeader />\n            <MessageList Message={CustomMessage} />\n            <MessageInput />\n           </Window>\n          <Thread />\n         </Channel>\n        </Chat>\n      <Contact/>}\n      <Footer/>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}