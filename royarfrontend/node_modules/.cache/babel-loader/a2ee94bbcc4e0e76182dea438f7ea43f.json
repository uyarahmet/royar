{"ast":null,"code":"var _jsxFileName = \"/Users/ahmet/Desktop/royar/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport Navbar from './Navbar';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport './css/main.css';\nimport SlideShow from './SlideShow';\nimport SearchAndBackground from './SearchAndBackground';\nimport ActionMenu from './ActionMenu';\nimport Contact from './Contact';\nimport Footer from './Footer';\nimport { Widget } from 'react-chat-widget';\nimport { StreamChat } from 'stream-chat';\nimport 'react-chat-widget/lib/styles.css';\nimport { useEffect, useState, useCallback, useRef } from 'react';\nimport { Chat, Channel, ChannelHeader, MessageInput, MessageList, Thread, Window } from 'stream-chat-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst STREAM_API = process.env.REACT_APP_STREAM_API_SECRET;\n\nfunction App() {\n  _s();\n\n  const [messages, setMessages] = useState(null);\n  const handleNewUserMessage = useCallback(async message => await channel.current.sendMessage({\n    text: message\n  }), []);\n  const client = new StreamChat(STREAM_API);\n  const setChannel = useCallback(async () => {\n    channel.current = client.channel('messaging', 'wolox-support', {\n      name: 'Wolox customer support'\n    });\n    const channelWatch = await channel.current.watch();\n    setMessages(channelWatch.messages);\n    return async () => {\n      await channelWatch.stopWatching();\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const setUser = useCallback(async () => {\n    await client.setUser({\n      id,\n      name\n    }, client.devToken(id));\n  }, [id, name]);\n  useEffect(() => {\n    setUser();\n    setChannel();\n  }, [setUser, setChannel]);\n  useEffect(() => messages === null || messages === void 0 ? void 0 : messages.map(message => addUserMessage(message.text)), [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchAndBackground, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SlideShow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ActionMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Widget, {\n      handleNewUserMessage: handleNewUserMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contact, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), \"}\", /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sb/k/VMjoTZ8JF3xxKGJQXd1l6U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/src/App.js"],"names":["Navbar","SlideShow","SearchAndBackground","ActionMenu","Contact","Footer","Widget","StreamChat","useEffect","useState","useCallback","useRef","Chat","Channel","ChannelHeader","MessageInput","MessageList","Thread","Window","STREAM_API","process","env","REACT_APP_STREAM_API_SECRET","App","messages","setMessages","handleNewUserMessage","message","channel","current","sendMessage","text","client","setChannel","name","channelWatch","watch","stopWatching","setUser","id","devToken","map","addUserMessage"],"mappings":"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","sourcesContent":["import './App.css';\nimport Navbar from './Navbar'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.min.js';\nimport './css/main.css';\nimport SlideShow from './SlideShow'\nimport SearchAndBackground from './SearchAndBackground'\nimport ActionMenu from './ActionMenu'\nimport Contact from './Contact'\nimport Footer from './Footer'\nimport {Widget} from 'react-chat-widget'\nimport { StreamChat } from 'stream-chat';\nimport 'react-chat-widget/lib/styles.css';\nimport {useEffect, useState, useCallback, useRef} from 'react'\nimport { Chat, Channel, ChannelHeader, MessageInput, MessageList, Thread, Window } from 'stream-chat-react';\n\nconst STREAM_API = process.env.REACT_APP_STREAM_API_SECRET;\n\n\nfunction App() {\n\n  const [messages, setMessages] = useState(null);\n\n  const handleNewUserMessage = useCallback(async message =>\n    await channel.current.sendMessage({\n      text: message\n    }), []);\n\n  const client = new StreamChat(STREAM_API);\n\n  const setChannel = useCallback(async () => {\n  channel.current = client.channel('messaging', 'wolox-support', {\n    name: 'Wolox customer support',\n  });\n\n  const channelWatch = await channel.current.watch();\n  setMessages(channelWatch.messages);\n\n  return async () => {\n    await channelWatch.stopWatching();\n  };\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n}, []);\n\n\n  const setUser = useCallback(async () => {\n    await client.setUser(\n      { id, name },\n      client.devToken(id)\n    );}, [id, name]);\n\n\n  useEffect(() => {\n    setUser()\n    setChannel()\n  }, [setUser, setChannel])\n\n  useEffect(\n  () => messages?.map(message => addUserMessage(message.text)),\n  [messages]\n  );\n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <SearchAndBackground/>\n      <SlideShow/>\n      <ActionMenu/>\n      <Widget handleNewUserMessage={handleNewUserMessage}/>\n      <Contact/>}\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}