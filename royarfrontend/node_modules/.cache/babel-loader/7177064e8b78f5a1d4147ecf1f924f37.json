{"ast":null,"code":"var _jsxFileName = \"/Users/ahmet/Desktop/royar/src/components/MessageInput/AgentMessageInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport { ChatAutoComplete, EmojiPicker, UploadsPreview, useChannelStateContext, useChatContext, useMessageInputContext } from 'stream-chat-react';\nimport './AgentMessageInput.css';\nimport { FileIcon, SmileyFace } from '../../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst automatedResponses = ['Great! We have many resources on our website detailing various pricing plans, including which features are available. And, if youâ€™re interested, follow the links at the bottom of each section to speak with our sales team: https://getstream.io/pricing/chat/', 'Got it. Our Enterprise program is one of the most popular among customers. You can find everything you need by following this link to our website: https://getstream.io/enterprise/', 'Good choice. We are always looking to add talented people to our team. You can find all of our current job listings on our website: https://getstream.io/enterprise/', \"Great. Can you describe what you're looking for?\"];\nexport const AgentMessageInput = () => {\n  _s();\n\n  const messageInput = useMessageInputContext();\n  const {\n    acceptedFiles,\n    maxNumberOfFiles,\n    multipleUploads\n  } = useChannelStateContext();\n  const {\n    client\n  } = useChatContext();\n  useEffect(() => {\n    const handleEvent = async event => {\n      const {\n        index\n      } = event.message;\n\n      if (typeof index === 'number') {\n        try {\n          const [channel] = await client.queryChannels({\n            cid: event.cid\n          });\n          setTimeout(() => channel.sendMessage({\n            text: automatedResponses[index],\n            automated: true\n          }), 1000);\n        } catch (e) {\n          console.log('Auto response error:', e);\n        }\n      }\n    };\n\n    client.on('message.new', handleEvent);\n    return () => client.off('message.new', handleEvent);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"agent-message-input__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(ImageDropzone, {\n      accept: acceptedFiles,\n      handleFiles: messageInput.uploadNewFiles,\n      multiple: multipleUploads,\n      disabled: maxNumberOfFiles !== undefined && messageInput.numberOfUploads >= maxNumberOfFiles,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agent-message-input__input\",\n        children: [/*#__PURE__*/_jsxDEV(UploadsPreview, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-message-input__input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(ChatAutoComplete, {\n            rows: 1,\n            placeholder: \"Send a message\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SmileyFace, {\n            openEmojiPicker: messageInput.openEmojiPicker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FileUploadButton, {\n            handleFiles: messageInput.uploadNewFiles,\n            children: /*#__PURE__*/_jsxDEV(FileIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmojiPicker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AgentMessageInput, \"jdypCfwHiHmUJVT4Kwaf1LY9+hE=\", false, function () {\n  return [useMessageInputContext, useChannelStateContext, useChatContext];\n});\n\n_c = AgentMessageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgentMessageInput\");","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/src/components/MessageInput/AgentMessageInput.js"],"names":["React","useEffect","FileUploadButton","ImageDropzone","ChatAutoComplete","EmojiPicker","UploadsPreview","useChannelStateContext","useChatContext","useMessageInputContext","FileIcon","SmileyFace","automatedResponses","AgentMessageInput","messageInput","acceptedFiles","maxNumberOfFiles","multipleUploads","client","handleEvent","event","index","message","channel","queryChannels","cid","setTimeout","sendMessage","text","automated","e","console","log","on","off","uploadNewFiles","undefined","numberOfUploads","openEmojiPicker"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,kBAAhD;AACA,SACEC,gBADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,sBAJF,EAKEC,cALF,EAMEC,sBANF,QAOO,mBAPP;AASA,OAAO,yBAAP;AAEA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;;AAEA,MAAMC,kBAAkB,GAAG,CACzB,kQADyB,EAEzB,qLAFyB,EAGzB,sKAHyB,EAIzB,kDAJyB,CAA3B;AAOA,OAAO,MAAMC,iBAAiB,GAAG,MAAM;AAAA;;AACrC,QAAMC,YAAY,GAAGL,sBAAsB,EAA3C;AAEA,QAAM;AAAEM,IAAAA,aAAF;AAAiBC,IAAAA,gBAAjB;AAAmCC,IAAAA;AAAnC,MAAuDV,sBAAsB,EAAnF;AACA,QAAM;AAAEW,IAAAA;AAAF,MAAaV,cAAc,EAAjC;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMkB,WAAW,GAAG,MAAOC,KAAP,IAAiB;AACnC,YAAM;AAAEC,QAAAA;AAAF,UAAYD,KAAK,CAACE,OAAxB;;AAEA,UAAI,OAAOD,KAAP,KAAiB,QAArB,EAA+B;AAC7B,YAAI;AACF,gBAAM,CAACE,OAAD,IAAY,MAAML,MAAM,CAACM,aAAP,CAAqB;AAAEC,YAAAA,GAAG,EAAEL,KAAK,CAACK;AAAb,WAArB,CAAxB;AAEAC,UAAAA,UAAU,CACR,MACEH,OAAO,CAACI,WAAR,CAAoB;AAClBC,YAAAA,IAAI,EAAEhB,kBAAkB,CAACS,KAAD,CADN;AAElBQ,YAAAA,SAAS,EAAE;AAFO,WAApB,CAFM,EAMR,IANQ,CAAV;AAQD,SAXD,CAWE,OAAOC,CAAP,EAAU;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCF,CAApC;AACD;AACF;AACF,KAnBD;;AAqBAZ,IAAAA,MAAM,CAACe,EAAP,CAAU,aAAV,EAAyBd,WAAzB;AACA,WAAO,MAAMD,MAAM,CAACgB,GAAP,CAAW,aAAX,EAA0Bf,WAA1B,CAAb;AACD,GAxBQ,EAwBN,EAxBM,CAAT,CANqC,CA8B7B;;AAER,sBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,MAAM,EAAEJ,aADV;AAEE,MAAA,WAAW,EAAED,YAAY,CAACqB,cAF5B;AAGE,MAAA,QAAQ,EAAElB,eAHZ;AAIE,MAAA,QAAQ,EACND,gBAAgB,KAAKoB,SAArB,IAAkCtB,YAAY,CAACuB,eAAb,IAAgCrB,gBALtE;AAAA,6BAQE;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA,gCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,oCAAf;AAAA,kCACE,QAAC,gBAAD;AAAkB,YAAA,IAAI,EAAE,CAAxB;AAA2B,YAAA,WAAW,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AAAY,YAAA,eAAe,EAAEF,YAAY,CAACwB;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,gBAAD;AAAkB,YAAA,WAAW,EAAExB,YAAY,CAACqB,cAA5C;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADF,eAoBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAxDM;;GAAMtB,iB;UACUJ,sB,EAEwCF,sB,EAC1CC,c;;;KAJRK,iB","sourcesContent":["import React, { useEffect } from 'react';\nimport { FileUploadButton, ImageDropzone } from 'react-file-utils';\nimport {\n  ChatAutoComplete,\n  EmojiPicker,\n  UploadsPreview,\n  useChannelStateContext,\n  useChatContext,\n  useMessageInputContext,\n} from 'stream-chat-react';\n\nimport './AgentMessageInput.css';\n\nimport { FileIcon, SmileyFace } from '../../assets';\n\nconst automatedResponses = [\n  'Great! We have many resources on our website detailing various pricing plans, including which features are available. And, if youâ€™re interested, follow the links at the bottom of each section to speak with our sales team: https://getstream.io/pricing/chat/',\n  'Got it. Our Enterprise program is one of the most popular among customers. You can find everything you need by following this link to our website: https://getstream.io/enterprise/',\n  'Good choice. We are always looking to add talented people to our team. You can find all of our current job listings on our website: https://getstream.io/enterprise/',\n  \"Great. Can you describe what you're looking for?\",\n];\n\nexport const AgentMessageInput = () => {\n  const messageInput = useMessageInputContext();\n\n  const { acceptedFiles, maxNumberOfFiles, multipleUploads } = useChannelStateContext();\n  const { client } = useChatContext();\n\n  useEffect(() => {\n    const handleEvent = async (event) => {\n      const { index } = event.message;\n\n      if (typeof index === 'number') {\n        try {\n          const [channel] = await client.queryChannels({ cid: event.cid });\n\n          setTimeout(\n            () =>\n              channel.sendMessage({\n                text: automatedResponses[index],\n                automated: true,\n              }),\n            1000,\n          );\n        } catch (e) {\n          console.log('Auto response error:', e);\n        }\n      }\n    };\n\n    client.on('message.new', handleEvent);\n    return () => client.off('message.new', handleEvent);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <div className='agent-message-input__wrapper'>\n      <ImageDropzone\n        accept={acceptedFiles}\n        handleFiles={messageInput.uploadNewFiles}\n        multiple={multipleUploads}\n        disabled={\n          maxNumberOfFiles !== undefined && messageInput.numberOfUploads >= maxNumberOfFiles\n        }\n      >\n        <div className='agent-message-input__input'>\n          <UploadsPreview />\n          <div className='agent-message-input__input-wrapper'>\n            <ChatAutoComplete rows={1} placeholder='Send a message' />\n            <SmileyFace openEmojiPicker={messageInput.openEmojiPicker} />\n            <FileUploadButton handleFiles={messageInput.uploadNewFiles}>\n              <FileIcon />\n            </FileUploadButton>\n          </div>\n        </div>\n      </ImageDropzone>\n      <EmojiPicker />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}