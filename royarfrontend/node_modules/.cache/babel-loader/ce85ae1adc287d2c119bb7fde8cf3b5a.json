{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\n\nconst notifyParent = parent => message => {\n  window.parent.postMessage(message, parent);\n}; // We have to keep this task list up-to-date with the website's checklist\n\n\nconst [SEND_MESSAGE] = ['customer-send-message'];\nexport const useChecklist = (customerClient, targetOrigin) => {\n  _s();\n\n  useEffect(() => {\n    const notify = notifyParent(targetOrigin);\n\n    const handleNewEvent = ({\n      type\n    }) => {\n      switch (type) {\n        case 'message.new':\n          notify(SEND_MESSAGE);\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    if (customerClient) {\n      customerClient.on(handleNewEvent);\n    }\n\n    return () => customerClient === null || customerClient === void 0 ? void 0 : customerClient.off(handleNewEvent);\n  }, [customerClient, targetOrigin]);\n};\n\n_s(useChecklist, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/src/ChecklistTasks.js"],"names":["useEffect","notifyParent","parent","message","window","postMessage","SEND_MESSAGE","useChecklist","customerClient","targetOrigin","notify","handleNewEvent","type","on","off"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;;AAEA,MAAMC,YAAY,GAAIC,MAAD,IAAaC,OAAD,IAAa;AAC5CC,EAAAA,MAAM,CAACF,MAAP,CAAcG,WAAd,CAA0BF,OAA1B,EAAmCD,MAAnC;AACD,CAFD,C,CAIA;;;AACA,MAAM,CAACI,YAAD,IAAiB,CAAC,uBAAD,CAAvB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,cAAD,EAAiBC,YAAjB,KAAkC;AAAA;;AAC5DT,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,MAAM,GAAGT,YAAY,CAACQ,YAAD,CAA3B;;AACA,UAAME,cAAc,GAAG,CAAC;AAAEC,MAAAA;AAAF,KAAD,KAAc;AACnC,cAAQA,IAAR;AACE,aAAK,aAAL;AACEF,UAAAA,MAAM,CAACJ,YAAD,CAAN;AACA;;AACF;AACE;AALJ;AAOD,KARD;;AASA,QAAIE,cAAJ,EAAoB;AAClBA,MAAAA,cAAc,CAACK,EAAf,CAAkBF,cAAlB;AACD;;AACD,WAAO,MAAMH,cAAN,aAAMA,cAAN,uBAAMA,cAAc,CAAEM,GAAhB,CAAoBH,cAApB,CAAb;AACD,GAfQ,EAeN,CAACH,cAAD,EAAiBC,YAAjB,CAfM,CAAT;AAgBD,CAjBM;;GAAMF,Y","sourcesContent":["import { useEffect } from 'react';\n\nconst notifyParent = (parent) => (message) => {\n  window.parent.postMessage(message, parent);\n};\n\n// We have to keep this task list up-to-date with the website's checklist\nconst [SEND_MESSAGE] = ['customer-send-message'];\n\nexport const useChecklist = (customerClient, targetOrigin) => {\n  useEffect(() => {\n    const notify = notifyParent(targetOrigin);\n    const handleNewEvent = ({ type }) => {\n      switch (type) {\n        case 'message.new':\n          notify(SEND_MESSAGE);\n          break;\n        default:\n          break;\n      }\n    };\n    if (customerClient) {\n      customerClient.on(handleNewEvent);\n    }\n    return () => customerClient?.off(handleNewEvent);\n  }, [customerClient, targetOrigin]);\n};\n"]},"metadata":{},"sourceType":"module"}