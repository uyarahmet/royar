{"ast":null,"code":"import React from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTypingContext } from '../../context/TypingContext';\n/**\n * TypingIndicator lists users currently typing, it needs to be a child of Channel component\n */\n\nvar UnMemoizedTypingIndicator = function (props) {\n  var _a = props.Avatar,\n      Avatar = _a === void 0 ? DefaultAvatar : _a,\n      _b = props.avatarSize,\n      avatarSize = _b === void 0 ? 32 : _b,\n      threadList = props.threadList;\n\n  var _c = useChannelStateContext(),\n      channelConfig = _c.channelConfig,\n      thread = _c.thread;\n\n  var client = useChatContext().client;\n  var _d = useTypingContext().typing,\n      typing = _d === void 0 ? {} : _d;\n\n  if ((channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.typing_events) === false) {\n    return null;\n  }\n\n  var typingInChannel = !threadList ? Object.values(typing).filter(function (_a) {\n    var _b;\n\n    var parent_id = _a.parent_id,\n        user = _a.user;\n    return (user === null || user === void 0 ? void 0 : user.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id) && !parent_id;\n  }) : [];\n  var typingInThread = threadList ? Object.values(typing).filter(function (_a) {\n    var _b;\n\n    var parent_id = _a.parent_id,\n        user = _a.user;\n    return (user === null || user === void 0 ? void 0 : user.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id) && parent_id === (thread === null || thread === void 0 ? void 0 : thread.id);\n  }) : [];\n  return React.createElement(\"div\", {\n    className: \"str-chat__typing-indicator \" + (threadList && typingInThread.length || !threadList && typingInChannel.length ? 'str-chat__typing-indicator--typing' : '')\n  }, React.createElement(\"div\", {\n    className: 'str-chat__typing-indicator__avatars'\n  }, (threadList ? typingInThread : typingInChannel).map(function (_a, i) {\n    var user = _a.user;\n    return React.createElement(Avatar, {\n      image: user === null || user === void 0 ? void 0 : user.image,\n      key: (user === null || user === void 0 ? void 0 : user.id) + \"-\" + i,\n      name: (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.id),\n      size: avatarSize,\n      user: user\n    });\n  })), React.createElement(\"div\", {\n    className: 'str-chat__typing-indicator__dots'\n  }, React.createElement(\"span\", {\n    className: 'str-chat__typing-indicator__dot'\n  }), React.createElement(\"span\", {\n    className: 'str-chat__typing-indicator__dot'\n  }), React.createElement(\"span\", {\n    className: 'str-chat__typing-indicator__dot'\n  })));\n};\n\nexport var TypingIndicator = React.memo(UnMemoizedTypingIndicator);","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/node_modules/stream-chat-react/dist/components/TypingIndicator/TypingIndicator.js"],"names":["React","Avatar","DefaultAvatar","useChannelStateContext","useChatContext","useTypingContext","UnMemoizedTypingIndicator","props","_a","_b","avatarSize","threadList","_c","channelConfig","thread","client","_d","typing","typing_events","typingInChannel","Object","values","filter","parent_id","user","id","typingInThread","createElement","className","length","map","i","image","key","name","size","TypingIndicator","memo"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nimport { useChannelStateContext } from '../../context/ChannelStateContext';\nimport { useChatContext } from '../../context/ChatContext';\nimport { useTypingContext } from '../../context/TypingContext';\n/**\n * TypingIndicator lists users currently typing, it needs to be a child of Channel component\n */\nvar UnMemoizedTypingIndicator = function (props) {\n    var _a = props.Avatar, Avatar = _a === void 0 ? DefaultAvatar : _a, _b = props.avatarSize, avatarSize = _b === void 0 ? 32 : _b, threadList = props.threadList;\n    var _c = useChannelStateContext(), channelConfig = _c.channelConfig, thread = _c.thread;\n    var client = useChatContext().client;\n    var _d = useTypingContext().typing, typing = _d === void 0 ? {} : _d;\n    if ((channelConfig === null || channelConfig === void 0 ? void 0 : channelConfig.typing_events) === false) {\n        return null;\n    }\n    var typingInChannel = !threadList\n        ? Object.values(typing).filter(function (_a) {\n            var _b;\n            var parent_id = _a.parent_id, user = _a.user;\n            return (user === null || user === void 0 ? void 0 : user.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id) && !parent_id;\n        })\n        : [];\n    var typingInThread = threadList\n        ? Object.values(typing).filter(function (_a) {\n            var _b;\n            var parent_id = _a.parent_id, user = _a.user;\n            return (user === null || user === void 0 ? void 0 : user.id) !== ((_b = client.user) === null || _b === void 0 ? void 0 : _b.id) && parent_id === (thread === null || thread === void 0 ? void 0 : thread.id);\n        })\n        : [];\n    return (React.createElement(\"div\", { className: \"str-chat__typing-indicator \" + ((threadList && typingInThread.length) || (!threadList && typingInChannel.length)\n            ? 'str-chat__typing-indicator--typing'\n            : '') },\n        React.createElement(\"div\", { className: 'str-chat__typing-indicator__avatars' }, (threadList ? typingInThread : typingInChannel).map(function (_a, i) {\n            var user = _a.user;\n            return (React.createElement(Avatar, { image: user === null || user === void 0 ? void 0 : user.image, key: (user === null || user === void 0 ? void 0 : user.id) + \"-\" + i, name: (user === null || user === void 0 ? void 0 : user.name) || (user === null || user === void 0 ? void 0 : user.id), size: avatarSize, user: user }));\n        })),\n        React.createElement(\"div\", { className: 'str-chat__typing-indicator__dots' },\n            React.createElement(\"span\", { className: 'str-chat__typing-indicator__dot' }),\n            React.createElement(\"span\", { className: 'str-chat__typing-indicator__dot' }),\n            React.createElement(\"span\", { className: 'str-chat__typing-indicator__dot' }))));\n};\nexport var TypingIndicator = React.memo(UnMemoizedTypingIndicator);\n"]},"metadata":{},"sourceType":"module"}