{"ast":null,"code":"var _jsxFileName = \"/Users/ahmet/Desktop/royar/src/components/MessageInput/CustomerMessageInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { ImageDropzone, FileUploadButton } from 'react-file-utils';\nimport { ChatAutoComplete, EmojiPicker, UploadsPreview, useChannelStateContext, useMessageInputContext } from 'stream-chat-react';\nimport './CustomerMessageInput.css';\nimport { FileIcon, SmileyFace } from '../../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CustomerMessageInput = props => {\n  _s();\n\n  const {\n    open,\n    setOpen\n  } = props;\n  const {\n    acceptedFiles,\n    maxNumberOfFiles,\n    multipleUploads\n  } = useChannelStateContext();\n  const messageInput = useMessageInputContext();\n  useEffect(() => {\n    if (open) {\n      messageInput.textareaRef.current.focus();\n    } else {\n      messageInput.textareaRef.current.blur();\n    }\n  }, [messageInput.textareaRef, open]);\n  useEffect(() => {\n    if (messageInput.text) {\n      setOpen(true);\n    }\n  }, [messageInput.text, setOpen]);\n\n  const handleSubmit = event => {\n    if (messageInput.text.startsWith('/')) {\n      event.target.value = ''; // eslint-disable-line\n\n      return messageInput.handleChange(event);\n    }\n\n    return messageInput.handleSubmit(event);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"support-message-input__wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(ImageDropzone, {\n      accept: acceptedFiles,\n      handleFiles: messageInput.uploadNewFiles,\n      multiple: multipleUploads,\n      disabled: maxNumberOfFiles !== undefined && messageInput.numberOfUploads >= maxNumberOfFiles,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"support-message-input__input\",\n        children: [/*#__PURE__*/_jsxDEV(UploadsPreview, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"support-message-input__input-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(ChatAutoComplete, {\n            handleSubmit: handleSubmit,\n            rows: 1,\n            placeholder: \"Ask us a question\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SmileyFace, {\n            openEmojiPicker: messageInput.openEmojiPicker\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FileUploadButton, {\n            handleFiles: messageInput.uploadNewFiles,\n            children: /*#__PURE__*/_jsxDEV(FileIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EmojiPicker, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomerMessageInput, \"MLsqd1VL+8RYhgqWrWrWGJDnL0U=\", false, function () {\n  return [useChannelStateContext, useMessageInputContext];\n});\n\n_c = CustomerMessageInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomerMessageInput\");","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/src/components/MessageInput/CustomerMessageInput.js"],"names":["React","useEffect","ImageDropzone","FileUploadButton","ChatAutoComplete","EmojiPicker","UploadsPreview","useChannelStateContext","useMessageInputContext","FileIcon","SmileyFace","CustomerMessageInput","props","open","setOpen","acceptedFiles","maxNumberOfFiles","multipleUploads","messageInput","textareaRef","current","focus","blur","text","handleSubmit","event","startsWith","target","value","handleChange","uploadNewFiles","undefined","numberOfUploads","openEmojiPicker"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,kBAAhD;AACA,SACEC,gBADF,EAEEC,WAFF,EAGEC,cAHF,EAIEC,sBAJF,EAKEC,sBALF,QAMO,mBANP;AAQA,OAAO,4BAAP;AAEA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;;AAEA,OAAO,MAAMC,oBAAoB,GAAIC,KAAD,IAAW;AAAA;;AAC7C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,KAA1B;AAEA,QAAM;AAAEG,IAAAA,aAAF;AAAiBC,IAAAA,gBAAjB;AAAmCC,IAAAA;AAAnC,MAAuDV,sBAAsB,EAAnF;AACA,QAAMW,YAAY,GAAGV,sBAAsB,EAA3C;AAEAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIY,IAAJ,EAAU;AACRK,MAAAA,YAAY,CAACC,WAAb,CAAyBC,OAAzB,CAAiCC,KAAjC;AACD,KAFD,MAEO;AACLH,MAAAA,YAAY,CAACC,WAAb,CAAyBC,OAAzB,CAAiCE,IAAjC;AACD;AACF,GANQ,EAMN,CAACJ,YAAY,CAACC,WAAd,EAA2BN,IAA3B,CANM,CAAT;AAQAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIiB,YAAY,CAACK,IAAjB,EAAuB;AACrBT,MAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,GAJQ,EAIN,CAACI,YAAY,CAACK,IAAd,EAAoBT,OAApB,CAJM,CAAT;;AAMA,QAAMU,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAIP,YAAY,CAACK,IAAb,CAAkBG,UAAlB,CAA6B,GAA7B,CAAJ,EAAuC;AACrCD,MAAAA,KAAK,CAACE,MAAN,CAAaC,KAAb,GAAqB,EAArB,CADqC,CACZ;;AACzB,aAAOV,YAAY,CAACW,YAAb,CAA0BJ,KAA1B,CAAP;AACD;;AACD,WAAOP,YAAY,CAACM,YAAb,CAA0BC,KAA1B,CAAP;AACD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,MAAM,EAAEV,aADV;AAEE,MAAA,WAAW,EAAEG,YAAY,CAACY,cAF5B;AAGE,MAAA,QAAQ,EAAEb,eAHZ;AAIE,MAAA,QAAQ,EACND,gBAAgB,KAAKe,SAArB,IAAkCb,YAAY,CAACc,eAAb,IAAgChB,gBALtE;AAAA,6BAQE;AAAK,QAAA,SAAS,EAAC,8BAAf;AAAA,gCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,sCAAf;AAAA,kCACE,QAAC,gBAAD;AACE,YAAA,YAAY,EAAEQ,YADhB;AAEE,YAAA,IAAI,EAAE,CAFR;AAGE,YAAA,WAAW,EAAC;AAHd;AAAA;AAAA;AAAA;AAAA,kBADF,eAME,QAAC,UAAD;AAAY,YAAA,eAAe,EAAEN,YAAY,CAACe;AAA1C;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE,QAAC,gBAAD;AAAkB,YAAA,WAAW,EAAEf,YAAY,CAACY,cAA5C;AAAA,mCACE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAxBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD,CAxDM;;GAAMnB,oB;UAGkDJ,sB,EACxCC,sB;;;KAJVG,oB","sourcesContent":["import React, { useEffect } from 'react';\nimport { ImageDropzone, FileUploadButton } from 'react-file-utils';\nimport {\n  ChatAutoComplete,\n  EmojiPicker,\n  UploadsPreview,\n  useChannelStateContext,\n  useMessageInputContext,\n} from 'stream-chat-react';\n\nimport './CustomerMessageInput.css';\n\nimport { FileIcon, SmileyFace } from '../../assets';\n\nexport const CustomerMessageInput = (props) => {\n  const { open, setOpen } = props;\n\n  const { acceptedFiles, maxNumberOfFiles, multipleUploads } = useChannelStateContext();\n  const messageInput = useMessageInputContext();\n\n  useEffect(() => {\n    if (open) {\n      messageInput.textareaRef.current.focus();\n    } else {\n      messageInput.textareaRef.current.blur();\n    }\n  }, [messageInput.textareaRef, open]);\n\n  useEffect(() => {\n    if (messageInput.text) {\n      setOpen(true);\n    }\n  }, [messageInput.text, setOpen]);\n\n  const handleSubmit = (event) => {\n    if (messageInput.text.startsWith('/')) {\n      event.target.value = ''; // eslint-disable-line\n      return messageInput.handleChange(event);\n    }\n    return messageInput.handleSubmit(event);\n  };\n\n  return (\n    <div className='support-message-input__wrapper'>\n      <ImageDropzone\n        accept={acceptedFiles}\n        handleFiles={messageInput.uploadNewFiles}\n        multiple={multipleUploads}\n        disabled={\n          maxNumberOfFiles !== undefined && messageInput.numberOfUploads >= maxNumberOfFiles\n        }\n      >\n        <div className='support-message-input__input'>\n          <UploadsPreview />\n          <div className='support-message-input__input-wrapper'>\n            <ChatAutoComplete\n              handleSubmit={handleSubmit}\n              rows={1}\n              placeholder='Ask us a question'\n            />\n            <SmileyFace openEmojiPicker={messageInput.openEmojiPicker} />\n            <FileUploadButton handleFiles={messageInput.uploadNewFiles}>\n              <FileIcon />\n            </FileUploadButton>\n          </div>\n        </div>\n      </ImageDropzone>\n      <EmojiPicker />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}