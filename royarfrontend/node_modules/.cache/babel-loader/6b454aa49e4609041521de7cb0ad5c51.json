{"ast":null,"code":"var _jsxFileName = \"/Users/ahmet/Desktop/royar/src/components/AgentChannelList/AgentChannelPreview.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport './AgentChannelPreview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AgentChannelPreview = props => {\n  _s();\n\n  const {\n    agentChannelId,\n    channel,\n    customerChannelId,\n    setActiveChannel\n  } = props;\n  const {\n    channel: activeChannel,\n    client\n  } = useChatContext();\n  const [unreadCount, setUnreadCount] = useState(channel.state.unreadCount);\n  const selected = (channel === null || channel === void 0 ? void 0 : channel.id) === (activeChannel === null || activeChannel === void 0 ? void 0 : activeChannel.id);\n  useEffect(() => {\n    client.on('message.read', () => setUnreadCount(0));\n    return () => client.off('message.read');\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    client.on('message.new', () => setUnreadCount(channel.state.unreadCount));\n    return () => client.off('message.new');\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const renderMessageText = () => {\n    const lastMessageText = channel.state.messages[channel.state.messages.length - 1].text;\n    return lastMessageText.length < 70 ? lastMessageText : `${lastMessageText.slice(0, 70)}...`;\n  };\n\n  if (!channel.state.messages.length || channel.id !== agentChannelId && channel.id !== customerChannelId) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: selected ? 'agent-channel-preview__wrapper selected' : 'agent-channel-preview__wrapper',\n    onClick: () => setActiveChannel(channel),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"agent-channel-preview__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agent-channel-preview__image-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: channel.data.name,\n          src: channel.data.image,\n          height: \"36px\",\n          width: \"36px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agent-channel-preview__name-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-channel-preview__name-count-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"agent-channel-preview__name\",\n            children: channel.data.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), !!unreadCount && !selected && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"agent-channel-preview__unread-count\",\n            children: unreadCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"agent-channel-preview__text-inquiry\",\n          children: channel.data.subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"agent-channel-preview__message\",\n      children: renderMessageText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AgentChannelPreview, \"7qc2PX1x3hJ05Tnllst++C2Y8R4=\", false, function () {\n  return [useChatContext];\n});\n\n_c = AgentChannelPreview;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgentChannelPreview\");","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/src/components/AgentChannelList/AgentChannelPreview.js"],"names":["React","useEffect","useState","useChatContext","AgentChannelPreview","props","agentChannelId","channel","customerChannelId","setActiveChannel","activeChannel","client","unreadCount","setUnreadCount","state","selected","id","on","off","renderMessageText","lastMessageText","messages","length","text","slice","data","name","image","subtitle"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,mBAA/B;AAEA,OAAO,2BAAP;;AAEA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC5C,QAAM;AAAEC,IAAAA,cAAF;AAAkBC,IAAAA,OAAlB;AAA2BC,IAAAA,iBAA3B;AAA8CC,IAAAA;AAA9C,MAAmEJ,KAAzE;AAEA,QAAM;AAAEE,IAAAA,OAAO,EAAEG,aAAX;AAA0BC,IAAAA;AAA1B,MAAqCR,cAAc,EAAzD;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAACK,OAAO,CAACO,KAAR,CAAcF,WAAf,CAA9C;AAEA,QAAMG,QAAQ,GAAG,CAAAR,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAES,EAAT,OAAgBN,aAAhB,aAAgBA,aAAhB,uBAAgBA,aAAa,CAAEM,EAA/B,CAAjB;AAEAf,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM,CAACM,EAAP,CAAU,cAAV,EAA0B,MAAMJ,cAAc,CAAC,CAAD,CAA9C;AACA,WAAO,MAAMF,MAAM,CAACO,GAAP,CAAW,cAAX,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT,CAR4C,CAWpC;;AAERjB,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,MAAM,CAACM,EAAP,CAAU,aAAV,EAAyB,MAAMJ,cAAc,CAACN,OAAO,CAACO,KAAR,CAAcF,WAAf,CAA7C;AACA,WAAO,MAAMD,MAAM,CAACO,GAAP,CAAW,aAAX,CAAb;AACD,GAHQ,EAGN,EAHM,CAAT,CAb4C,CAgBpC;;AAER,QAAMC,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,eAAe,GAAGb,OAAO,CAACO,KAAR,CAAcO,QAAd,CAAuBd,OAAO,CAACO,KAAR,CAAcO,QAAd,CAAuBC,MAAvB,GAAgC,CAAvD,EAA0DC,IAAlF;AAEA,WAAOH,eAAe,CAACE,MAAhB,GAAyB,EAAzB,GAA8BF,eAA9B,GAAiD,GAAEA,eAAe,CAACI,KAAhB,CAAsB,CAAtB,EAAyB,EAAzB,CAA6B,KAAvF;AACD,GAJD;;AAMA,MACE,CAACjB,OAAO,CAACO,KAAR,CAAcO,QAAd,CAAuBC,MAAxB,IACCf,OAAO,CAACS,EAAR,KAAeV,cAAf,IAAiCC,OAAO,CAACS,EAAR,KAAeR,iBAFnD,EAGE;AACA,WAAO,IAAP;AACD;;AAED,sBACE;AACE,IAAA,SAAS,EACPO,QAAQ,GAAG,yCAAH,GAA+C,gCAF3D;AAIE,IAAA,OAAO,EAAE,MAAMN,gBAAgB,CAACF,OAAD,CAJjC;AAAA,4BAME;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAA,+BACE;AAAK,UAAA,GAAG,EAAEA,OAAO,CAACkB,IAAR,CAAaC,IAAvB;AAA6B,UAAA,GAAG,EAAEnB,OAAO,CAACkB,IAAR,CAAaE,KAA/C;AAAsD,UAAA,MAAM,EAAC,MAA7D;AAAoE,UAAA,KAAK,EAAC;AAA1E;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,qCAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,2CAAf;AAAA,kCACE;AAAG,YAAA,SAAS,EAAC,6BAAb;AAAA,sBAA4CpB,OAAO,CAACkB,IAAR,CAAaC;AAAzD;AAAA;AAAA;AAAA;AAAA,kBADF,EAEG,CAAC,CAACd,WAAF,IAAiB,CAACG,QAAlB,iBACC;AAAK,YAAA,SAAS,EAAC,qCAAf;AAAA,sBAAsDH;AAAtD;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAG,UAAA,SAAS,EAAC,qCAAb;AAAA,oBAAoDL,OAAO,CAACkB,IAAR,CAAaG;AAAjE;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAoBE;AAAG,MAAA,SAAS,EAAC,gCAAb;AAAA,gBAA+CT,iBAAiB;AAAhE;AAAA;AAAA;AAAA;AAAA,YApBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAvDM;;GAAMf,mB;UAGgCD,c;;;KAHhCC,mB","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nimport './AgentChannelPreview.css';\n\nexport const AgentChannelPreview = (props) => {\n  const { agentChannelId, channel, customerChannelId, setActiveChannel } = props;\n\n  const { channel: activeChannel, client } = useChatContext();\n  const [unreadCount, setUnreadCount] = useState(channel.state.unreadCount);\n\n  const selected = channel?.id === activeChannel?.id;\n\n  useEffect(() => {\n    client.on('message.read', () => setUnreadCount(0));\n    return () => client.off('message.read');\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    client.on('message.new', () => setUnreadCount(channel.state.unreadCount));\n    return () => client.off('message.new');\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const renderMessageText = () => {\n    const lastMessageText = channel.state.messages[channel.state.messages.length - 1].text;\n\n    return lastMessageText.length < 70 ? lastMessageText : `${lastMessageText.slice(0, 70)}...`;\n  };\n\n  if (\n    !channel.state.messages.length ||\n    (channel.id !== agentChannelId && channel.id !== customerChannelId)\n  ) {\n    return null;\n  }\n\n  return (\n    <div\n      className={\n        selected ? 'agent-channel-preview__wrapper selected' : 'agent-channel-preview__wrapper'\n      }\n      onClick={() => setActiveChannel(channel)}\n    >\n      <div className='agent-channel-preview__top'>\n        <div className='agent-channel-preview__image-wrapper'>\n          <img alt={channel.data.name} src={channel.data.image} height='36px' width='36px' />\n        </div>\n        <div className='agent-channel-preview__name-wrapper'>\n          <div className='agent-channel-preview__name-count-wrapper'>\n            <p className='agent-channel-preview__name'>{channel.data.name}</p>\n            {!!unreadCount && !selected && (\n              <div className='agent-channel-preview__unread-count'>{unreadCount}</div>\n            )}\n          </div>\n          <p className='agent-channel-preview__text-inquiry'>{channel.data.subtitle}</p>\n        </div>\n      </div>\n      <p className='agent-channel-preview__message'>{renderMessageText()}</p>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}