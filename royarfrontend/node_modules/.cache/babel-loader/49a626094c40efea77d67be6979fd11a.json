{"ast":null,"code":"import React, { useRef } from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\n\nvar UnMemoizedChannelPreviewMessenger = function (props) {\n  var active = props.active,\n      _a = props.Avatar,\n      Avatar = _a === void 0 ? DefaultAvatar : _a,\n      channel = props.channel,\n      displayImage = props.displayImage,\n      displayTitle = props.displayTitle,\n      latestMessage = props.latestMessage,\n      setActiveChannel = props.setActiveChannel,\n      unread = props.unread,\n      watchers = props.watchers;\n  var channelPreviewButton = useRef(null);\n  var activeClass = active ? 'str-chat__channel-preview-messenger--active' : '';\n  var unreadClass = unread && unread >= 1 ? 'str-chat__channel-preview-messenger--unread' : '';\n\n  var onSelectChannel = function () {\n    if (setActiveChannel) {\n      setActiveChannel(channel, watchers);\n    }\n\n    if (channelPreviewButton === null || channelPreviewButton === void 0 ? void 0 : channelPreviewButton.current) {\n      channelPreviewButton.current.blur();\n    }\n  };\n\n  return React.createElement(\"button\", {\n    className: \"str-chat__channel-preview-messenger \" + unreadClass + \" \" + activeClass,\n    \"data-testid\": 'channel-preview-button',\n    onClick: onSelectChannel,\n    ref: channelPreviewButton\n  }, React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--left'\n  }, React.createElement(Avatar, {\n    image: displayImage,\n    name: displayTitle,\n    size: 40\n  })), React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--right'\n  }, React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--name'\n  }, React.createElement(\"span\", null, displayTitle)), React.createElement(\"div\", {\n    className: 'str-chat__channel-preview-messenger--last-message'\n  }, latestMessage)));\n};\n/**\n * Used as preview component for channel item in [ChannelList](#channellist) component.\n * Its best suited for messenger type chat.\n */\n\n\nexport var ChannelPreviewMessenger = React.memo(UnMemoizedChannelPreviewMessenger);","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/node_modules/stream-chat-react/dist/components/ChannelPreview/ChannelPreviewMessenger.js"],"names":["React","useRef","Avatar","DefaultAvatar","UnMemoizedChannelPreviewMessenger","props","active","_a","channel","displayImage","displayTitle","latestMessage","setActiveChannel","unread","watchers","channelPreviewButton","activeClass","unreadClass","onSelectChannel","current","blur","createElement","className","onClick","ref","image","name","size","ChannelPreviewMessenger","memo"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,SAASC,MAAM,IAAIC,aAAnB,QAAwC,WAAxC;;AACA,IAAIC,iCAAiC,GAAG,UAAUC,KAAV,EAAiB;AACrD,MAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;AAAA,MAA2BC,EAAE,GAAGF,KAAK,CAACH,MAAtC;AAAA,MAA8CA,MAAM,GAAGK,EAAE,KAAK,KAAK,CAAZ,GAAgBJ,aAAhB,GAAgCI,EAAvF;AAAA,MAA2FC,OAAO,GAAGH,KAAK,CAACG,OAA3G;AAAA,MAAoHC,YAAY,GAAGJ,KAAK,CAACI,YAAzI;AAAA,MAAuJC,YAAY,GAAGL,KAAK,CAACK,YAA5K;AAAA,MAA0LC,aAAa,GAAGN,KAAK,CAACM,aAAhN;AAAA,MAA+NC,gBAAgB,GAAGP,KAAK,CAACO,gBAAxP;AAAA,MAA0QC,MAAM,GAAGR,KAAK,CAACQ,MAAzR;AAAA,MAAiSC,QAAQ,GAAGT,KAAK,CAACS,QAAlT;AACA,MAAIC,oBAAoB,GAAGd,MAAM,CAAC,IAAD,CAAjC;AACA,MAAIe,WAAW,GAAGV,MAAM,GAAG,6CAAH,GAAmD,EAA3E;AACA,MAAIW,WAAW,GAAGJ,MAAM,IAAIA,MAAM,IAAI,CAApB,GAAwB,6CAAxB,GAAwE,EAA1F;;AACA,MAAIK,eAAe,GAAG,YAAY;AAC9B,QAAIN,gBAAJ,EAAsB;AAClBA,MAAAA,gBAAgB,CAACJ,OAAD,EAAUM,QAAV,CAAhB;AACH;;AACD,QAAIC,oBAAoB,KAAK,IAAzB,IAAiCA,oBAAoB,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,oBAAoB,CAACI,OAArG,EAA8G;AAC1GJ,MAAAA,oBAAoB,CAACI,OAArB,CAA6BC,IAA7B;AACH;AACJ,GAPD;;AAQA,SAAQpB,KAAK,CAACqB,aAAN,CAAoB,QAApB,EAA8B;AAAEC,IAAAA,SAAS,EAAE,yCAAyCL,WAAzC,GAAuD,GAAvD,GAA6DD,WAA1E;AAAuF,mBAAe,wBAAtG;AAAgIO,IAAAA,OAAO,EAAEL,eAAzI;AAA0JM,IAAAA,GAAG,EAAET;AAA/J,GAA9B,EACJf,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACItB,KAAK,CAACqB,aAAN,CAAoBnB,MAApB,EAA4B;AAAEuB,IAAAA,KAAK,EAAEhB,YAAT;AAAuBiB,IAAAA,IAAI,EAAEhB,YAA7B;AAA2CiB,IAAAA,IAAI,EAAE;AAAjD,GAA5B,CADJ,CADI,EAGJ3B,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACItB,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3B,EACItB,KAAK,CAACqB,aAAN,CAAoB,MAApB,EAA4B,IAA5B,EAAkCX,YAAlC,CADJ,CADJ,EAGIV,KAAK,CAACqB,aAAN,CAAoB,KAApB,EAA2B;AAAEC,IAAAA,SAAS,EAAE;AAAb,GAA3B,EAA+FX,aAA/F,CAHJ,CAHI,CAAR;AAOH,CApBD;AAqBA;AACA;AACA;AACA;;;AACA,OAAO,IAAIiB,uBAAuB,GAAG5B,KAAK,CAAC6B,IAAN,CAAWzB,iCAAX,CAA9B","sourcesContent":["import React, { useRef } from 'react';\nimport { Avatar as DefaultAvatar } from '../Avatar';\nvar UnMemoizedChannelPreviewMessenger = function (props) {\n    var active = props.active, _a = props.Avatar, Avatar = _a === void 0 ? DefaultAvatar : _a, channel = props.channel, displayImage = props.displayImage, displayTitle = props.displayTitle, latestMessage = props.latestMessage, setActiveChannel = props.setActiveChannel, unread = props.unread, watchers = props.watchers;\n    var channelPreviewButton = useRef(null);\n    var activeClass = active ? 'str-chat__channel-preview-messenger--active' : '';\n    var unreadClass = unread && unread >= 1 ? 'str-chat__channel-preview-messenger--unread' : '';\n    var onSelectChannel = function () {\n        if (setActiveChannel) {\n            setActiveChannel(channel, watchers);\n        }\n        if (channelPreviewButton === null || channelPreviewButton === void 0 ? void 0 : channelPreviewButton.current) {\n            channelPreviewButton.current.blur();\n        }\n    };\n    return (React.createElement(\"button\", { className: \"str-chat__channel-preview-messenger \" + unreadClass + \" \" + activeClass, \"data-testid\": 'channel-preview-button', onClick: onSelectChannel, ref: channelPreviewButton },\n        React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--left' },\n            React.createElement(Avatar, { image: displayImage, name: displayTitle, size: 40 })),\n        React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--right' },\n            React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--name' },\n                React.createElement(\"span\", null, displayTitle)),\n            React.createElement(\"div\", { className: 'str-chat__channel-preview-messenger--last-message' }, latestMessage))));\n};\n/**\n * Used as preview component for channel item in [ChannelList](#channellist) component.\n * Its best suited for messenger type chat.\n */\nexport var ChannelPreviewMessenger = React.memo(UnMemoizedChannelPreviewMessenger);\n"]},"metadata":{},"sourceType":"module"}