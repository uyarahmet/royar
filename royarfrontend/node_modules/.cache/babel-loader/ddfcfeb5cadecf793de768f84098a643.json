{"ast":null,"code":"var _jsxFileName = \"/Users/ahmet/Desktop/royar/src/components/AgentChannelHeader/AgentChannelHeader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\nimport './AgentChannelHeader.css';\nimport { NotificationPopup } from './NotificationPopup';\nimport { DownIconSmall, EmailIcon, PhoneIcon } from '../../assets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AgentChannelHeader = () => {\n  _s();\n\n  const {\n    channel,\n    client\n  } = useChatContext();\n  const [eventChannel, setEventChannel] = useState(null);\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [previewText, setPreviewText] = useState('');\n  useEffect(() => {\n    const handleEvent = async event => {\n      if (event.channel_id !== channel.id && !event.message.automated) {\n        try {\n          const [response] = await client.queryChannels({\n            cid: event.cid\n          });\n          setEventChannel(response);\n          setPreviewText(event.message.text);\n          setPopupVisible(true);\n        } catch (e) {\n          console.log('Message notification error:', e);\n        }\n      }\n    };\n\n    client.on('message.new', handleEvent);\n    return () => client.off('message.new', handleEvent);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (popupVisible) {\n      setTimeout(() => setPopupVisible(false), 3000);\n    }\n  }, [popupVisible]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"agent-channel-header__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"agent-channel-header__top\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        alt: channel.data.name,\n        src: channel.data.image,\n        height: \"42px\",\n        width: \"42px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"agent-channel-header__top__name\",\n        children: channel.data.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agent-channel-header__top__circle\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-channel-header__top__dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-channel-header__top__dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"agent-channel-header__top__dot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"agent-channel-header__middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agent-channel-header__middle__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(PhoneIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"agent-channel-header__middle__text\",\n          children: channel.data.created_by.phone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"agent-channel-header__middle__wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(EmailIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"agent-channel-header__middle__text email\",\n          children: channel.data.created_by.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"agent-channel-header__bottom__border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"agent-channel-header__bottom\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"agent-channel-header__bottom__type\",\n        children: \"Issue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"agent-channel-header__bottom__selection\",\n        children: channel.data.issue\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DownIconSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"agent-channel-header__bottom__type\",\n        children: \"Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"agent-channel-header__bottom__selection\",\n        children: \"Unresolved\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DownIconSmall, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"agent-channel-header__bottom__border\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), popupVisible && previewText && /*#__PURE__*/_jsxDEV(NotificationPopup, {\n      eventChannel,\n      previewText,\n      setPopupVisible\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AgentChannelHeader, \"s653FCrlz8brnXsxF1ofOWuYHHw=\", false, function () {\n  return [useChatContext];\n});\n\n_c = AgentChannelHeader;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgentChannelHeader\");","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/src/components/AgentChannelHeader/AgentChannelHeader.js"],"names":["React","useEffect","useState","useChatContext","NotificationPopup","DownIconSmall","EmailIcon","PhoneIcon","AgentChannelHeader","channel","client","eventChannel","setEventChannel","popupVisible","setPopupVisible","previewText","setPreviewText","handleEvent","event","channel_id","id","message","automated","response","queryChannels","cid","text","e","console","log","on","off","setTimeout","data","name","image","created_by","phone","email","issue"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useChatContext } from 'stream-chat-react';\n\nimport './AgentChannelHeader.css';\n\nimport { NotificationPopup } from './NotificationPopup';\n\nimport { DownIconSmall, EmailIcon, PhoneIcon } from '../../assets';\n\nexport const AgentChannelHeader = () => {\n  const { channel, client } = useChatContext();\n\n  const [eventChannel, setEventChannel] = useState(null);\n  const [popupVisible, setPopupVisible] = useState(false);\n  const [previewText, setPreviewText] = useState('');\n\n  useEffect(() => {\n    const handleEvent = async (event) => {\n      if (event.channel_id !== channel.id && !event.message.automated) {\n        try {\n          const [response] = await client.queryChannels({ cid: event.cid });\n\n          setEventChannel(response);\n          setPreviewText(event.message.text);\n          setPopupVisible(true);\n        } catch (e) {\n          console.log('Message notification error:', e);\n        }\n      }\n    };\n\n    client.on('message.new', handleEvent);\n    return () => client.off('message.new', handleEvent);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    if (popupVisible) {\n      setTimeout(() => setPopupVisible(false), 3000);\n    }\n  }, [popupVisible]);\n\n  return (\n    <div className='agent-channel-header__container'>\n      <div className='agent-channel-header__top'>\n        <img alt={channel.data.name} src={channel.data.image} height='42px' width='42px' />\n        <p className='agent-channel-header__top__name'>{channel.data.name}</p>\n        <div className='agent-channel-header__top__circle'>\n          <div className='agent-channel-header__top__dot' />\n          <div className='agent-channel-header__top__dot' />\n          <div className='agent-channel-header__top__dot' />\n        </div>\n      </div>\n      <div className='agent-channel-header__middle'>\n        <div className='agent-channel-header__middle__wrapper'>\n          <PhoneIcon />\n          <p className='agent-channel-header__middle__text'>{channel.data.created_by.phone}</p>\n        </div>\n        <div className='agent-channel-header__middle__wrapper'>\n          <EmailIcon />\n          <p className='agent-channel-header__middle__text email'>\n            {channel.data.created_by.email}\n          </p>\n        </div>\n      </div>\n      <div className='agent-channel-header__bottom__border' />\n      <div className='agent-channel-header__bottom'>\n        <p className='agent-channel-header__bottom__type'>Issue</p>\n        <p className='agent-channel-header__bottom__selection'>{channel.data.issue}</p>\n        <DownIconSmall />\n        <p className='agent-channel-header__bottom__type'>Status</p>\n        <p className='agent-channel-header__bottom__selection'>Unresolved</p>\n        <DownIconSmall />\n      </div>\n      <div className='agent-channel-header__bottom__border' />\n      {popupVisible && previewText && (\n        <NotificationPopup {...{ eventChannel, previewText, setPopupVisible }} />\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}