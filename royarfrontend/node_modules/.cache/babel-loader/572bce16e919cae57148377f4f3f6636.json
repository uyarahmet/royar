{"ast":null,"code":"var _jsxFileName = \"/Users/ahmet/Desktop/royar/src/UnauthedRoute.js\";\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthedRoute = ({\n  component: Component,\n  loading,\n  ...rest\n}) => {\n  const isAuthed = Boolean(localStorage.getItem(\"token\"));\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: props => loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this) : !isAuthed ? /*#__PURE__*/_jsxDEV(Component, {\n      history: props.history,\n      ...rest\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: \"/\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AuthedRoute;\nexport default AuthedRoute;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthedRoute\");","map":{"version":3,"sources":["/Users/ahmet/Desktop/royar/src/UnauthedRoute.js"],"names":["React","Redirect","Route","AuthedRoute","component","Component","loading","rest","isAuthed","Boolean","localStorage","getItem","props","history","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,OAAxB;AAAiC,KAAGC;AAApC,CAAD,KAAgD;AAClE,QAAMC,QAAQ,GAAGC,OAAO,CAACC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAD,CAAxB;AACA,sBACE,QAAC,KAAD,OACMJ,IADN;AAEE,IAAA,MAAM,EAAEK,KAAK,IACXN,OAAO,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,GAEH,CAACE,QAAD,gBACF,QAAC,SAAD;AAAW,MAAA,OAAO,EAAEI,KAAK,CAACC,OAA1B;AAAA,SAAuCN;AAAvC;AAAA;AAAA;AAAA;AAAA,YADE,gBAGF,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFO,QAAAA,QAAQ,EAAE;AADR;AADN;AAAA;AAAA;AAAA;AAAA;AARN;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CApBD;;KAAMX,W;AAsBN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst AuthedRoute = ({ component: Component, loading, ...rest }) => {\n  const isAuthed = Boolean(localStorage.getItem(\"token\"));\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        loading ? (\n          <p>Loading...</p>\n        ) : !isAuthed ? (\n          <Component history={props.history} {...rest} />\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/\"\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n\nexport default AuthedRoute;\n"]},"metadata":{},"sourceType":"module"}