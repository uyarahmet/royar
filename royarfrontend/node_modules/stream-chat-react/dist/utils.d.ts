import React from 'react';
import type { UserResponse } from 'stream-chat';
import type { DefaultUserType, UnknownType } from './types/types';
export declare const isOnlyEmojis: (text?: string | undefined) => boolean;
export declare type MentionProps<Us extends DefaultUserType<Us> = DefaultUserType> = {
    mentioned_user: UserResponse<Us>;
};
export declare type RenderTextOptions = {
    customMarkDownRenderers?: {
        [nodeType: string]: React.ElementType;
    };
};
export declare const renderText: <Us extends DefaultUserType<Us> = DefaultUserType<import("./types/types").DefaultUserTypeInternal>>(text?: string | undefined, mentioned_users?: UserResponse<Us>[] | undefined, options?: RenderTextOptions) => JSX.Element | null;
export declare function escapeRegExp(text: string): string;
export declare function generateRandomId(): string;
export declare const smartRender: (ElementOrComponentOrLiteral: React.ComponentType, props?: UnknownType | undefined, fallback?: React.ComponentType<{}> | null | undefined) => JSX.Element;
//# sourceMappingURL=utils.d.ts.map