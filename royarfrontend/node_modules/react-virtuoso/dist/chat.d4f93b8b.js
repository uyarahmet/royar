// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"chat.tsx":[function(require,module,exports) {
"use strict";

var __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", {
      value: raw
    });
  } else {
    cooked.raw = raw;
  }

  return cooked;
};

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

var __spreadArrays = this && this.__spreadArrays || function () {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __importStar(require("react"));

var styled_1 = __importDefault(require("@emotion/styled"));

var src_1 = require("../src/");

var faker_1 = __importDefault(require("faker"));

var BubbleWrap = styled_1.default.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  display: flex;\n  justify-content: ", ";\n  width: 100%;\n  padding: 12px 0;\n"], ["\n  display: flex;\n  justify-content: ", ";\n  width: 100%;\n  padding: 12px 0;\n"])), function (_a) {
  var fromUser = _a.fromUser;
  return fromUser && 'flex-end';
});
var Content = styled_1.default.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  background: ", ";\n  color: white;\n  width: 60%;\n  padding: 12px;\n  border-radius: 4px;\n  word-break: break-word;\n"], ["\n  background: ", ";\n  color: white;\n  width: 60%;\n  padding: 12px;\n  border-radius: 4px;\n  word-break: break-word;\n"])), function (_a) {
  var fromUser = _a.fromUser;
  return fromUser ? 'orange' : 'red';
});

function Bubble(_a) {
  var text = _a.text,
      fromUser = _a.fromUser,
      className = _a.className;
  return /*#__PURE__*/React.createElement(BubbleWrap, {
    fromUser: fromUser,
    className: className
  }, /*#__PURE__*/React.createElement(Content, {
    fromUser: fromUser
  }, text));
}

var Root = styled_1.default.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  padding: 12px 24px;\n"], ["\n  padding: 12px 24px;\n"])));
var TextWrapper = styled_1.default.div(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  margin-top: 12px;\n"], ["\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  height: 100%;\n  margin-top: 12px;\n"])));

function ChatList(_a) {
  var userId = _a.userId,
      _b = _a.messages,
      messages = _b === void 0 ? [] : _b,
      onSend = _a.onSend,
      onReceive = _a.onReceive,
      placeholder = _a.placeholder;

  var _c = react_1.useState(''),
      newMessage = _c[0],
      setNewMessage = _c[1];

  var ref = react_1.useRef(null);
  var isMyOwnMessage = react_1.useRef(false);

  var onSendMessage = function onSendMessage() {
    isMyOwnMessage.current = true;
    onSend(newMessage);
    setNewMessage('');
  };

  var onReceiveMessage = function onReceiveMessage() {
    isMyOwnMessage.current = false;
    onReceive();
  };

  var row = react_1.default.useMemo(function () {
    return function (i, _a) {
      var message = _a.message,
          id = _a.id;
      var fromUser = id === userId;
      return /*#__PURE__*/React.createElement(Bubble, {
        key: i,
        fromUser: fromUser,
        text: message
      });
    };
  }, [userId]);
  return /*#__PURE__*/React.createElement(Root, {
    style: {
      flex: 1,
      display: 'flex',
      flexDirection: 'column',
      border: '1px solid red'
    }
  }, /*#__PURE__*/React.createElement(src_1.Virtuoso, {
    ref: ref,
    style: {
      flex: 1
    },
    initialTopMostItemIndex: messages.length - 1,
    followOutput: function followOutput(isAtBottom) {
      if (isMyOwnMessage.current) {
        // if the user has scrolled away and sends a message, bring him to the bottom instantly
        return isAtBottom ? 'smooth' : 'auto';
      } else {
        // a message from another user has been received - don't pull to bottom unless already there
        return isAtBottom ? 'smooth' : false;
      }
    },
    itemContent: row,
    data: messages
  }), /*#__PURE__*/React.createElement(TextWrapper, {
    style: {
      flex: 0,
      minHeight: 30
    }
  }, /*#__PURE__*/React.createElement("form", {
    onSubmit: function onSubmit(e) {
      e.preventDefault();
      onSendMessage();
    }
  }, /*#__PURE__*/React.createElement("input", {
    type: "text",
    value: newMessage,
    onChange: function onChange(e) {
      return setNewMessage(e.target.value);
    },
    placeholder: placeholder
  }), /*#__PURE__*/React.createElement("button", {
    type: "submit"
  }, "send"), " |", /*#__PURE__*/React.createElement("button", {
    type: "button",
    onClick: onReceiveMessage
  }, "receive"))));
}

var data = Array.from({
  length: 130
}, function (_) {
  return {
    id: faker_1.default.random.number({
      min: 1,
      max: 2
    }).toString(),
    message: faker_1.default.lorem.sentences()
  };
});

function App() {
  var _a = react_1.default.useState(data),
      messages = _a[0],
      setMessages = _a[1];

  var userId = '1';
  return /*#__PURE__*/React.createElement("div", {
    style: {
      height: '500px',
      display: 'flex',
      flexDirection: 'column'
    }
  }, /*#__PURE__*/React.createElement(ChatList, {
    messages: messages,
    userId: "1",
    placeholder: "Say hi!",
    onSend: function onSend(message) {
      return setMessages(function (x) {
        return __spreadArrays(x, [{
          id: userId,
          message: message
        }]);
      });
    },
    onReceive: function onReceive() {
      setMessages(function (x) {
        return __spreadArrays(x, [{
          id: '2',
          message: faker_1.default.lorem.sentences()
        }]);
      });
    }
  }));
}

exports.default = App;
var templateObject_1, templateObject_2, templateObject_3, templateObject_4;
},{"react":"../node_modules/react/index.js","@emotion/styled":"../node_modules/@emotion/styled/dist/styled.browser.esm.js","../src/":"../src/index.tsx","faker":"../node_modules/faker/index.js"}]},{},[], null)