// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"auto-prepend-items.tsx":[function(require,module,exports) {
"use strict";

var __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  Object.defineProperty(o, k2, {
    enumerable: true,
    get: function get() {
      return m[k];
    }
  });
} : function (o, m, k, k2) {
  if (k2 === undefined) k2 = k;
  o[k2] = m[k];
});

var __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {
  Object.defineProperty(o, "default", {
    enumerable: true,
    value: v
  });
} : function (o, v) {
  o["default"] = v;
});

var __importStar = this && this.__importStar || function (mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) for (var k in mod) {
    if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
  }

  __setModuleDefault(result, mod);

  return result;
};

var __spreadArrays = this && this.__spreadArrays || function () {
  for (var s = 0, i = 0, il = arguments.length; i < il; i++) {
    s += arguments[i].length;
  }

  for (var r = Array(s), k = 0, i = 0; i < il; i++) {
    for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) {
      r[k] = a[j];
    }
  }

  return r;
};

var __importDefault = this && this.__importDefault || function (mod) {
  return mod && mod.__esModule ? mod : {
    "default": mod
  };
};

Object.defineProperty(exports, "__esModule", {
  value: true
});

var react_1 = __importStar(require("react"));

var src_1 = require("../src/");

var faker_1 = __importDefault(require("faker"));

function toggleBg(index) {
  return index % 2 ? 'var(--ifm-background-color)' : 'var(--ifm-color-emphasis-200)';
}

function user(index) {
  if (index === void 0) {
    index = 0;
  }

  var firstName = faker_1.default.name.firstName();
  var lastName = faker_1.default.name.lastName();
  return {
    index: index + 1,
    bgColor: toggleBg(index),
    name: firstName + " " + lastName,
    initials: "" + firstName.substr(0, 1) + lastName.substr(0, 1),
    jobTitle: faker_1.default.name.jobTitle(),
    description: faker_1.default.lorem.sentence(10),
    longText: faker_1.default.lorem.paragraphs(1)
  };
}

var generated = [];

var generateUsers = function generateUsers(length, startIndex) {
  if (startIndex === void 0) {
    startIndex = 0;
  }

  return Array.from({
    length: length
  }, function (_, i) {
    return getUser(i + startIndex);
  });
};

var getUser = function getUser(index) {
  if (!generated[index]) {
    generated[index] = user(index);
  }

  return generated[index];
};

function App() {
  var START_INDEX = 10000;
  var INITIAL_ITEM_COUNT = 20;

  var _a = react_1.useState(START_INDEX),
      firstItemIndex = _a[0],
      setFirstItemIndex = _a[1];

  var _b = react_1.useState(function () {
    return generateUsers(INITIAL_ITEM_COUNT, START_INDEX);
  }),
      users = _b[0],
      setUsers = _b[1];

  var prependItems = react_1.useCallback(function () {
    console.log('prependItems()');
    var usersToPrepend = 20;
    var nextFirstItemIndex = firstItemIndex - usersToPrepend;
    setTimeout(function () {
      setFirstItemIndex(function () {
        return nextFirstItemIndex;
      });
      setUsers(function () {
        return __spreadArrays(generateUsers(usersToPrepend, nextFirstItemIndex), users);
      });
    }, 5);
    return false;
  }, [firstItemIndex, users, setUsers]);
  return /*#__PURE__*/React.createElement(src_1.Virtuoso, {
    style: {
      height: 500
    },
    components: {
      Header: function Header() {
        return /*#__PURE__*/React.createElement("div", {
          style: {
            textAlign: 'center',
            padding: '1rem'
          }
        }, "Loading...");
      }
    },
    firstItemIndex: firstItemIndex,
    initialTopMostItemIndex: INITIAL_ITEM_COUNT - 1,
    data: users,
    startReached: prependItems,
    itemContent: function itemContent(_, user) {
      return /*#__PURE__*/React.createElement("div", {
        style: {
          backgroundColor: user.bgColor,
          padding: '1rem 0.5rem'
        }
      }, /*#__PURE__*/React.createElement("h4", null, user.index, ". ", user.name), /*#__PURE__*/React.createElement("div", {
        style: {
          marginTop: '1rem'
        }
      }, user.description));
    }
  });
}

exports.default = App;
},{"react":"../node_modules/react/index.js","../src/":"../src/index.tsx","faker":"../node_modules/faker/index.js"}]},{},[], null)